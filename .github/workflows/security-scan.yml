name: Security Scan

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  schedule:
    - cron: '0 0 * * *'

jobs:
  security-scan:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      
      - uses: actions/setup-node@v3
        with:
          node-version: '16'

      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y jq curl
          sudo wget https://github.com/mikefarah/yq/releases/latest/download/yq_linux_amd64 -O /usr/local/bin/yq
          sudo chmod +x /usr/local/bin/yq
          wget -qO - https://aquasecurity.github.io/trivy-repo/deb/public.key | sudo apt-key add -
          echo deb https://aquasecurity.github.io/trivy-repo/deb $(lsb_release -sc) main | sudo tee -a /etc/apt/sources.list.d/trivy.list
          sudo apt-get update
          sudo apt-get install -y trivy

      - name: Create .env file
        run: |
          echo "SNYK_TOKEN=${{ secrets.SNYK_TOKEN }}" > .env
          echo "SNYK_ENABLED=true" >> .env
          echo "SNYK_SEVERITY=high" >> .env
          echo "TRIVY_ENABLED=true" >> .env
          echo "TRIVY_SEVERITY=HIGH" >> .env
          echo "TRIVY_IGNORE_UNFIXED=false" >> .env
          echo "SLACK_WEBHOOK=${{ secrets.SLACK_WEBHOOK }}" >> .env

      - name: Build Docker image
        run: |
          if [[ -f Dockerfile ]]; then
            docker build -t project-specific-image:latest .
            echo "IMAGE_NAME=project-specific-image:latest" >> .env
          else
            echo "IMAGE_NAME=ubuntu:latest" >> .env
          fi

      - name: Run security scan
        run: |
          chmod +x security-scan.sh
          ./security-scan.sh

      - name: Upload scan results
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: security-scan-results
          path: |
            reports/report.html
            reports/high-severity.json